class Game {
	field Player player;
	field char lastPlayerInput;

	field Array projectiles;
	field int projectileCount;
	field int maxProjectileCount;

	field Array enemies;
	field int enemyCount;

	constructor Game new() {
		let player = Player.new(250, 220);
		let lastPlayerInput = 0;
		
		let maxProjectileCount = 50;
		let projectiles = Array.new(maxProjectileCount);
		let projectileCount = 0;

		let enemyCount = 5;
		let enemies = Array.new(enemyCount);
		do placeEnemies();

		return this;
	}

	method void dispose() {
		do player.dispose();
		do projectiles.dispose();
		do enemies.dispose();
		do Memory.deAlloc(this);
		return;
	}

	method void placeEnemies() {
		let enemies[0] = Enemy.new(8);
		let enemies[1] = Enemy.new(12);
		let enemies[2] = Enemy.new(16);
		let enemies[3] = Enemy.new(20);
		let enemies[4] = Enemy.new(24);
		return;
	}

	method void run() {
		while (true) {
			do handlePlayerInput();
			do moveProjectiles();
			do handleEnemyProjectileCollision();
			do Sys.wait(5);
		}
		return;
	}

	method void handlePlayerInput() {
		var char inputKey;
		let inputKey = Keyboard.keyPressed();

		if (inputKey = 130) { do player.moveLeft(); } 
		if (inputKey = 132) { do player.moveRight(); } 
		if ((inputKey = 32) & (~(lastPlayerInput = 32))) { do handleShooting(); } 

		let lastPlayerInput = inputKey;
		
		return;
	}

	method void handleShooting() {
		var Projectile projectile;

		if (projectileCount = maxProjectileCount) { return; }

		let projectile = Projectile.new((player.getXPos() + (player.getWidth() / 2)), player.getYPos() - player.getHeight() - 1);
		let projectiles[projectileCount] = projectile;
		let projectileCount = projectileCount + 1;

		return;
	}

	method void moveProjectiles() {
		var Projectile projectile;
		var int i;
		let i = 0;

		while (i < projectileCount) {
			let projectile = projectiles[i];
			if (projectile.canMove()) {
				do projectile.move();
			} else {
				do projectile.erase();
			}
			let i = i + 1;
		}

		return;
	}

	method void handleEnemyProjectileCollision() {
		var Enemy enemy;
		var int i;
		let i = 0;

		while (i < enemyCount) {
			let enemy = enemies[i];
			if (~(enemy.isDead())) {
				if (enemy.hasCollision()) {
					do enemy.erase();
				}
			}
			let i = i + 1;
		}

		return;
	}
}
